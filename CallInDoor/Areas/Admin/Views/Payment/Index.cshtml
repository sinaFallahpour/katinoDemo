

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    @*<link rel="~/stylesheet" href="vendors/dataTable/dataTables.min.css" type="text/css">*@
    <link rel="~/stylesheet" href="/vendors/dataTable/dataTables.min.css" type="text/css">
    <link rel="stylesheet" href="/vendors/select2/css/select2.min.css" type="text/css">

    <style>
        #createBackMoneyButton {
            margin-top: 3%;
            display: block;
            margin-right: 35%;
            width: 25%;
            text-align: center;
            padding: 2%;
        }

        #myTable {
            text-align: center;
        }

        i {
            font-size: 30px;
        }

        .error {
            animation-name: example;
            animation-duration: 1.6s;
        }

        @@keyframes example {
            0% {
                border-color: red;
                width: 102%;
                height: 100%;
            }

            10% {
                border-color: white;
                width: 100%;
                height: 99%;
            }

            20% {
                border-color: red;
                width: 102%;
                height: 100%;
            }

            30% {
                border-color: white;
                width: 100%;
                height: 99%;
            }

            40% {
                border-color: red;
                width: 102%;
                height: 100%;
            }

            50% {
                border-color: white;
                width: 100%;
                height: 100%;
            }

            60% {
                border-color: red;
                width: 102%;
                height: 99%;
            }

            70% {
                border-color: white;
                width: 100%;
                height: 100%;
            }

            80% {
                border-color: red;
                width: 102%;
                height: 99%;
            }

            90% {
                border-color: white;
                width: 100%;
                height: 100%;
            }

            100% {
                border-color: red;
                width: 102%;
                height: 99%;
            }
        }
    </style>
}


<hr />
<button type="button" id="createBackMoneyButton" class="btn btn-primary mr-2 mb-2" data-toggle="modal" data-target="#BackMoneyModal">
    بازگشت پول
</button>
<hr />
<table id="myTable" class="table table-striped table-bordered col-xs-1 center-block">
    <thead>
        <tr>

            <th>#</th>
            <th>تاریخ</th>
            @*<th style="max-width:30% !important">تیتر</th>*@
            <th>شرکت</th>
            <th> نام طرح</th>
            <th>      قیمت     </th>
            <th>تخفیف</th>
            <th>قیمت با تخفیف</th>
            <th>قیمت با مالیات</th>
            <th>نام نماینده</th>
            <th>مبلغ نماینده</th>
            <th>پرداخت</th>
            <th>نوع پرداخت</th>



        </tr>
    </thead>
    <tbody id="rewsOfTable">
    </tbody>
</table>
<div class="modal fade" tabindex="-1" role="dialog" id="BackMoneyModal">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">بازگشت پول </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="closemodals" data-dismiss="modal">×</span>
                </button>
            </div>
            <div class="modal-body">

                <form id="createBackMoneyForm">
                    <input type="hidden" value="" name="id" id="id" />
                    <div class="row  " style="margin-bottom:10px">
                        <div class="col-4">
                            <label for="TicketPriorityStatus">ارسال به حساب : </label>
                        </div>
                        <div class="col-7">
                            <select id="phoneNumber" name="phoneNumber" class="form-control" multiple>
                                @foreach (var item in ViewBag.UserList)
                                {
                                    <option value='@item.PhoneNumber'>@item.Fullname</option>

                                }
                            </select>
                        </div>
                    </div>


                    <button type="submit" id="createBackMoney" class="btn btn-block btn-primary m-auto btn-block">ثبت</button>


                </form>
                @*<button type="button" id="closeModal" class="btn btn-danger btn-block" style="display:block;text-align:center; margin-left:35%" data-dismiss="modal">بستن</button>*@


            </div>

        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="showInfoModal">
    <div class="modal-dialog modal-md" role="document" style="margin-left: 32%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> تکمیل اطلاعات پرداخت </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="closemodals" data-dismiss="modal">×</span>
                </button>
            </div>

            <div class="modal-body">

                <form id="showInfoForm">
                    <div class="col-lg-12">

                        <div class="alert alert-danger d-flex align-items-center alert-with-border" role="alert">
                            <i class="ti-info-alt d-inline-block mr-3"></i>
                            کد پیگیری وارد شده برای کاربر جهت پیگیری بازگشت پول ارسال خواهد شد، لطفا در وارد کردن آن دقت نمایید.
                        </div>
                        <div class="row">
                            <label class="col-lg-6" for="TicketPriorityStatus">شماره شبا: </label>
                            <div class="form-group col-lg-6" id="shebaNumber" name="shebaNumber"></div>


                        </div>

                        <div class="row">
                            <label class="col-lg-6" for="TicketPriorityStatus"> :مبلغ پرداختی </label>
                            <div class="form-group col-lg-6" id="price" name="price"></div>


                        </div>
                        <div class="row">
                            <label class="col-lg-6" for="TicketPriorityStatus">کد پیگری:  </label>
                            <input class="form-control  col-lg-6" type="text" id="trackingCode" name="trackingCode" placeholder="کد پیگیری را وارد کنید..." />


                        </div>
                        <div class="row" style="margin-top: 23px;">
                            <button type="button" id="createBackMoneyBtn" class="btn btn-block btn-primary m-auto btn-block">ثبت</button>
                        </div>
                    </div>
                    <hr />



                </form>
                @*<button type="button" id="closeModal" class="btn btn-danger btn-block" style="display:block;text-align:center; margin-left:35%" data-dismiss="modal">بستن</button>*@


            </div>

        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdn.ckeditor.com/4.15.1/standard/ckeditor.js"></script>

    <script src="~/vendors/dataTable/jquery.dataTables.min.js"></script>

    <!-- Bootstrap 4 and responsive compatibility -->
    <script src="~/vendors/dataTable/dataTables.bootstrap4.min.js"></script>
    <script src="~/vendors/dataTable/dataTables.responsive.min.js"></script>
    <script src="/vendors/select2/js/select2.min.js"></script>

    <script>
        var BackMoney;
        var isEdit = false;
        $(document).ready(function () {
            //var url = '/api' + '@Url.Action("GetLastOfOrdersForAdmin", "Payment")';

            //url = url.replace("/Admin", "");
            url ='/api/Payment/GetLastOfOrdersForAdmin'
            GetData(url, {}, true);
            $('#phoneNumber').select2({
                placeholder: 'Select',

            });

        });

        function GetData(url, data, isAlreadyTable) {
            if (isAlreadyTable == true) {
                $('#myTable').DataTable().destroy();
            }
            var oTable = $('#myTable').DataTable({
                responsive: true,
                ordering: false,
                processing: true,
                paging: true,
                BackMoney: {
                    url: "//cdn.datatables.net/plug-ins/1.10.20/i18n/Persian.json"
                },
                ajax: {
                    beforeSend: setAuthHeader,
                    url: url,
                    dataSrc: "",
                    type: "GET",
                    dataType: "json",
                    delay: 1000,
                    data: data,
                    cache: true

                },

                columns: [
                    {

                        data: 'orderId',
                        render: function (data, type, item) {
                            return `<div style="font-weight: bold;">${data}</div>`
                        }
                    },
                    {
                        data: 'date',
                        render: function (data, type, item) {
                            return `<div style="font-weight: bold;">${data}</div>`
                        }
                    }
                    ,
                    {
                        data: 'companyName',
                        render: function (data, type, item) {
                            return `<div style="font-weight: bold;">${data}</div>`
                        }
                    },
                    {
                        data: 'planName',
                        render: function (data, type, item) {
                            return `<div style="font-weight: bold;">${data}</div>`
                        }

                    },
                    {

                        data: "price",
                        render: function (data, type, item) {
                            data = separate(data) + " تومان";

                            return `<div style="font-weight: bold;">${data}</div>`
                        }

                    }
                   , {

                       data: "discount",
                       render: function (data, type, item) {
                           data = separate(data) + " تومان";

                           return `<div style="font-weight: bold;">${data}</div>`
                       }

                    }
                    , {

                        data: "priceWithDiscount",
                        render: function (data, type, item) {
                            data = separate(data) + " تومان";

                            return `<div style="font-weight: bold;">${data}</div>`
                        }

                    }
                    ,

                    {
                        data: 'priceWithTax',
                        render: function (data, type, item) {
                            data = separate(data) + " تومان";
                        return `<div style="font-weight: bold;">${data}</div>`
                      }
                    },
                    //RefrenceUserName = x.RefrenceTransations.Refrence.UserName,
                    //RefrenceAmount = x.RefrenceTransations.Amount
                    {
                        data: 'refrenceUserName',
                        render: function (data, type, item) {
                            if (!data)
                                return `<div style="font-weight: bold;">-</div>`

                        return `<div style="font-weight: bold;">${data}</div>`
                        }
                    },

                    {
                        data: 'refrenceAmount',
                        render: function (data, type, item) {
                            return `<div style="font-weight: bold;">${data}</div>`
                        }
                    },
                    {
                        data: "issuccess",
                        render: function (data, type, item) {
                            var btnClass = '';
                            if (data == "موفق") {
                                btnClass = 'btn btn-sm btn-success';
                            }
                            else if (data == "نا موفق" || data == "ناموفق") {
                                btnClass = 'btn btn-sm btn-danger'
                            }
                            else {
                                btnClass = 'btn btn-sm btn-primary'

                            }
                            return `<div style="font-weight: bold;" class="${btnClass}">${data}</div>`
                        }
                    },
                    {
                        data: "orderType",
                        render: function (data, type, item) {
                            if (data == "بازگشت پول") {
                                return `<div  class="btn btn-danger"style="font-weight: bold;">${data}</div>`
                            }
                            return `<div  class="btn btn-light-primary"style="font-weight: bold;">${data}</div>`
                        }
                    }


                ],
            });
        };

        $('#createBackMoneyForm').submit(function (e) {
            $("#trackingCode").removeClass(".error");

            e.preventDefault();
            var phoneNumber = $("#phoneNumber").val();
            var backMoney = {};
            $.ajax({
                beforeSend: setAuthHeader,
                method: "Post",
                url: '/api/Payment/GetUserInfoForMoneyBack?phoneNumber=' + phoneNumber,
                data: {},
                //cache: false,
                contentType: 'application/json',
                //processData: false,
                success: function (data) {

                    backMoney = data.resul;
                    //

                    $("#shebaNumber").html(backMoney.shebaNumber);
                    $("#price").html(separate(backMoney.price)+"  تومان");
                    $("#BackMoneyModal").modal("hide");
                    $(".modal-backdrop").addClass("d-none");
                    $("#showInfoModal").modal("toggle");
                    $("#createBackMoneyBtn").click(function () {
                        alert();
                        if ($("#trackingCode").val() == "" || $("#trackingCode").val() == null) {
                            $("#trackingCode").addClass(".error");
                            toastr.error("کد پیگیری را وارد کنید");
                            return;
                        }
                        backMoney.trackingCode = $("#trackingCode").val();

                        sendBackMoney(backMoney);

                    });

                },
                error: function (data) {

                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);

                    })
                }
            });


        });

        function separate(Number) {
            Number += '';
            Number = Number.replace(',', ''); Number = Number.replace(',', ''); Number = Number.replace(',', '');
            Number = Number.replace(',', ''); Number = Number.replace(',', ''); Number = Number.replace(',', '');
            x = Number.split('.');
            y = x[0];
            z = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(y))
                y = y.replace(rgx, '$1' + ',' + '$2');
            return y + z;
        }


        function sendBackMoney(data) {
            $.ajax({
                beforeSend: setAuthHeader,
                method: "Post",
                url: '/api/Payment/MoneyBack',
                data: JSON.stringify(data),
                cache: false,
                contentType: 'Application/Json',
                processData: false,
                success: function (data) {

                    toastr.success(data.message);
                    $("#showInfoModal").modal("hide");
                    $(".modal-backdrop").addClass("d-none");
                   var url = '/api' + '@Url.Action("GetLastOfOrdersForAdmin", "Payment")';
                    url = url.replace("/Admin", "");
                    GetData(url, {}, true);
                },
                error: function (data) {

                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);

                    })
                }
            });
        }
        //function checkMoneyBackRowOfDataCTable() {
        //}
    </script>
}
