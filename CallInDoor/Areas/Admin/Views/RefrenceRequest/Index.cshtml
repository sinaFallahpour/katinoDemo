@{
    ViewData["Title"] = "مدیریت درخواست های نمایندگان";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    @*<link rel="~/stylesheet" href="vendors/dataTable/dataTables.min.css" type="text/css">*@
    <link rel="~/stylesheet" href="~/vendors/dataTable/dataTables.min.css" type="text/css">
    <link rel="stylesheet" href="/vendors/select2/css/select2.min.css" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/10.16.6/sweetalert2.css" integrity="sha512-IThEP8v8WRHuDqEKg3D6V0jROeRcQXGu/02HzCudtHKlLSzl6F6EycdHw34M3gsBA5zsUyR4ynW6j5vS1qE4wQ==" crossorigin="anonymous" />

}

<button type="button" id="rejectResultBtn" class="btn btn-primary mr-2 mb-2 d-none" data-toggle="modal" data-target="#rejectResult">
</button>
<button type="button" id="ShowDetailsBtn" class="d-none" data-toggle="modal" data-target="#ShowDetails">
</button>

@*<button type="button" class="btn btn-light" id="CreateTicketModalBtn" onclick="sendTicket()" data-toggle="modal" data-target="#CreateTicket">
        ارسال پیام جدید
    </button>*@

<hr />
<table id="myTable" class="table table-striped table-bordered table-responsive">
    <thead>
        <tr>
            <th>نام ونام خانوادگی</th>
            <th>شماره موبایل</th>
            <th>  شماره شبا	 </th>
            <th> مبلغ</th>
            <th> تاریخ ثبت</th>
            <th> وضعیت</th>
            <th>  توضیحات نماینده</th>
            <th>  توضیحات ادمین</th>
            <th>عملیات</th>
        </tr>
    </thead>
    <tbody id="rewsOfTable">
    </tbody>
</table>

<ul class="pagination" style=" direction: ltr; ">
</ul>

<div class="modal fade" tabindex="-1" role="dialog" id="CreateTicket">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ارسال پیام</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="CreateTicketClose">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="CreateTicketForm">

                    @*<input type="hidden" value="" name="id" id="id" />*@
                    <div class="form-row">
                        <div class="form-group col-md-12 ">
                            <label for="subject">موضوع </label>
                            <input type="text" name="subject" class="form-control " id="subject" />
                        </div>
                        <div class="form-group col-md-12 ">
                            <label for="TicketPriorityStatus">اولویت </label>
                            <select id="TicketPriorityStatus" name="TicketPriorityStatus" class="form-control">
                                <option value="1">فوری</option>
                                <option value="2">معمولی</option>
                                <option value="3">جهت اطلاع</option>
                            </select>
                        </div>

                        <input id="userId" type="hidden" name="userId" class="form-control" multiple />


                        <div class="form-group col-md-12 ">
                            <label for="content">متن پیام </label>
                            <textarea type="text" name="content" class="form-control" id="content"></textarea>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="file">فایل </label>
                            <input type="file" name="file" class="form-control" id="file">
                        </div>
                    </div>



                    <button type="submit" id="CreateTicketBtn" class="btn btn-light-primary btn-block">ثبت</button>
                </form>

            </div>
        </div>
    </div>
</div>


<!--CreateModal-->

<div class="modal fade" tabindex="-1" role="dialog" id="ShowDetails">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> نمایش جزئیات</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="ShowDetailsClose">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="ShowDetailsForm">

                    <div class="form-row">
                        <div class="form-group col-md-12  ">
                            <img name="logo" class="" id="logo">
                        </div>
                        <div class="form-group col-md-4  ">
                            <label for="fullName">نام و نام خانواگی </label>
                            <div name="fullName" class="form-control  " id="fullName"></div>
                        </div>
                        <div class="form-group col-md-4  ">
                            <label for="phoneNUmber">شماره تماس</label>
                            <div name="text" class="form-control  " id="phoneNUmber"></div>

                        </div>
                        <div class="form-group col-md-4  ">
                            <label for="email">ایمیل </label>
                            <div type="text" name="email" class="form-control" id="email"></div>
                        </div>
                        <div class="form-group col-md-4  ">
                            <label for="city">شهر </label>
                            <div name="city" class="form-control  " id="city"></div>

                        </div>
                        <div class="form-group col-md-8  ">
                            <label for="address">آدرس </label>
                            <div type="text" name="address" class="form-control" id="address"></div>
                        </div>
                        <div class="form-group col-md-6  ">
                            <label for="birthday">تاریخ تولد </label>
                            <div name="birthday" class="form-control  " id="birthday"></div>

                        </div>
                        <div class="form-group col-md-6  ">
                            <label for="isMarried">وضعیت تاهل </label>
                            <div type="text" name="isMarried" class="form-control" id="isMarried"></div>
                        </div>
                        <div class="form-group col-md-3  ">
                            <label for="military">وضعیت سربازی </label>
                            <div name="military" class="form-control  " id="military"></div>

                        </div>
                        <div class="form-group col-md-4  ">
                            <label for="exemptionExpirestionDate">تاریخ معافیت </label>
                            <div name="exemptionExpirestionDate" class="form-control  " id="exemptionExpirestionDate"></div>

                        </div>
                        <div class="form-group col-md-5  ">
                            <label for="exemptionExpirestionRecieveDate">تاریخ دریافت کارت پایان خدمت</label>
                            <div type="text" name="exemptionExpirestionRecieveDate" class="form-control" id="exemptionExpirestionRecieveDate"></div>
                        </div>

                        <div class="form-group col-md-6  ">
                            <label for="asignCount">تعداد رزومه های ارسالی </label>
                            <div name="asignCount" class="form-control  " id="asignCount"></div>

                        </div>  <div class="form-group col-md-6  ">
                            <label for="isActive">وضعیت کاربر </label>
                            <div name="isActive" class="form-control  " id="isActive"></div>

                        </div>

                    </div>
                </form>

            </div>
        </div>
    </div>
</div>


<div class="modal fade" tabindex="-1" role="dialog" id="CreateTicket">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ارسال پیام</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="CreateTicketClose">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="CreateTicketForm">

                    @*<input type="hidden" value="" name="id" id="id" />*@
                    <div class="form-row">
                        <div class="form-group col-md-12 ">
                            <label for="subject">موضوع </label>
                            <input type="text" name="subject" class="form-control " id="subject" />
                        </div>
                        <div class="form-group col-md-12 ">
                            <label for="TicketPriorityStatus">اولویت </label>
                            <select id="TicketPriorityStatus" name="TicketPriorityStatus" class="form-control">
                                <option value="1">فوری</option>
                                <option value="2">معمولی</option>
                                <option value="3">جهت اطلاع</option>
                            </select>

                        </div>

                        <div class="form-group col-md-8 ">
                            <label for="TicketPriorityStatus">ارسال به </label>
                            <select id="userId" name="userId" class="form-control" multiple>
                            </select>


                        </div>

                        <div class="form-group col-md-4 ">
                            <input type="checkbox" class="form-check-input" id="selectAll">
                            <label id="label" class="form-check-label" for="selectAll">انتخاب همه</label>

                        </div>

                        <div class="form-group col-md-12 ">
                            <label for="content">متن پیام </label>
                            <textarea type="text" name="content" class="form-control" id="content"></textarea>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="file">فایل </label>
                            <input type="file" name="file" class="form-control" id="file">
                        </div>
                    </div>



                    <button type="submit" id="CreateTicketBtn" class="btn btn-light-primary btn-block">ثبت</button>
                </form>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="CreateGifCode">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ارسال کد تخفیف</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="CreateGifCodeClose">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="CreateGifCodeForm">

                    @*<input type="hidden" value="" name="id" id="id" />*@
                    <div class="form-row">
                        <div class="form-group col-md-12 ">
                            <label for="GiftCode">کد تخفیف </label>
                            <input type="text" name="GiftCode" class="form-control " id="GiftCode" placeholder=" برای مثال 48796" />
                        </div>
                        <div class="form-group col-md-12 ">
                            <label for="Discount">درصد تخفیف </label>
                            <input type="text" name="Discount" class="form-control " id="Discount" placeholder="10" />
                        </div>
                        <div class="form-group col-md-12 ">
                            <label for="ExpireTime">مدت زمان استفاده </label>
                            <input type="number" name="ExpireTime" class="form-control " id="ExpireTime" placeholder="6 روز" />
                            <input type="hidden" name="EmployerId" id="EmployerId" />
                        </div>

                    </div>



                    <button type="submit" id="CreateGifCodeBtn" class="btn btn-light-primary btn-block">ثبت</button>
                </form>

            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="~/vendors/dataTable/jquery.dataTables.min.js"></script>

    <!-- Bootstrap 4 and responsive compatibility -->
    <script src="~/vendors/dataTable/dataTables.bootstrap4.min.js"></script>
    <script src="~/vendors/dataTable/dataTables.responsive.min.js"></script>
    <script src="/vendors/select2/js/select2.min.js"></script>


    <script>
        var url = "/api/RefrenceRequest/GetAllRefrenceRequest";
        var acceptUrl = "/api/RefrenceRequest/AcceptRequest";
        var rejectUrl = "/api/RefrenceRequest/RejectRequest";

        function sendTicket() {
            $(".modal-backdrop").removeClass("d-none");
        }


        function GetData(url, data, isAlreadyTable) {
            if (isAlreadyTable == true) {
                $('#myTable').DataTable().destroy();
            }
            var oTable = $('#myTable').DataTable({
                responsive: true,
                ordering: false,
                processing: true,
                paging: true,
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.10.20/i18n/Persian.json"
                },
                ajax: {
                    beforeSend: setAuthHeader,
                    url: url,
                    dataSrc: "",
                    type: "GET",
                    dataType: "json",
                    cache: true,
                    delay: 1000,
                    data: data,
                },

                columns: [
                    {
                        data: 'fullname',
                        render: function (data, type, item) {
                            return '<div class="form-group btn">' + data + '</div>'
                        }
                    }
                    ,
                    {
                        data: 'phoneNumber',
                        render: function (data, type, item) {
                            return '<div class="" style=" font-size: 103%;font-weight: bold;" > ' + data + '</div>'
                        }
                    }
                    ,
                    {
                        data: 'shebaNumber',
                        render: function (data, type, item) {
                            return '<div class="form-group btn">' + data + '</div>'
                        }
                    },

                    {
                        data: 'amount',
                        render: function (data, type, item) {
                            return '<div class="form-group btn">' + data + '</div>'
                        }
                    },
                    {

                        data: 'createDate',
                        render: function (data, type, item) {
                            return '<div class="form-group btn">' + data + '</div>'
                        }
                    },
                    {

                        data: 'enumDescription',
                        render: function (data, type, item) {
                            return '<div class="form-group btn">' + data + '</div>'
                        }
                    },

                    {
                        data: 'refrenceDescription',
                        render: function (data, type, item) {
                            var res = data?.substring(1, 4);
                            if (res?.length >= 100) {
                                return `<div class="form-group btn"><p title='${data}'>${res}</p></div>`
                            }
                            return `<div class="form-group btn"><p title='${data}'>  ${data}  </p></div>`
                        }
                    },
                    {
                        data: 'adminDescriptions',
                        render: function (data, type, item) {
                            var res = data?.substring(1, 4);
                            if (res?.length >= 100) {
                                return `<div class="form-group btn"><p title='${data}'>${res}</p></div>`
                            }
                            return `<div class="form-group btn"><p title='${data}'>  ${data}  </p></div>`
                        }
                    },

                    {
                        data: "id",
                        render: function (data, type, item) {
                             let el = "";
                            if (item.refrenceTransationStatus != 0) {
                                el = `<button class="form-group btn btn-dark d-block">${item.enumDescription}</button>`
                            }
                            else {
                                 el = `
                                    <button class="form-group btn btn-success d-block"
                                            data-id=${item.id}
                                            data-fullName="${item.fullName}"
                                            data-enumDescription="${item.enumDescription}"
                                        onclick="acceptrequest(this)">
                                            تایید
                                    </button>
                                        <button class="form-group btn btn-danger d-block"
                                        data-id=${item.id}
                                        data-fullName="${item.fullName}"
                                        data-enumDescription="${item.enumDescription}"
                                        onclick="rejectRequest(this)">رد کردن</button>
                                        `;
                            }
                            return el;
                        }
                    }

                ],

            });
        };

        function sepaisMarried(Number) {
            Number += '';
            Number = Number.replace(',', ''); Number = Number.replace(',', ''); Number = Number.replace(',', '');
            Number = Number.replace(',', ''); Number = Number.replace(',', ''); Number = Number.replace(',', '');
            x = Number.split('.');
            y = x[0];
            z = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(y))
                y = y.replace(rgx, '$1' + ',' + '$2');
            return y + z;
        }

        $(document).ready(async function () {

            $("#notifCount").addClass("d-none");
            //loadData
            GetData(url, {}, false);
        });

        function showContent(e) {
            $("#modalParagraph").html($(e).val());
            $("#rejectResultBtn").click();
        }
        function changeCreateStatus(e) {
            var statusId = $(e).attr("data-status");
            $("#adverCreateStatusInModal").val(statusId);
            adverId = $(e).attr("data-id");
            $("#ShowDetailsBtn").click();
        }





        function changeValue(val) {
            if (val == "" || val == null || val == "null") {
                return "----";
            }
            return val;
        }

        function userActivation(active) {
            if (active == "true") return "فعال";
            else return "غیر فعال";
        }
        function sendTicket(id) {
            $("#userId").val(id);
            $("#CreateTicket").modal("toggle");
        }
        $(".CreateTicketForm").submit(function (e) {
            $("#content").removeClass("error");
            $("#subject").removeClass("error");
            $("#file").removeClass("error");


            e.preventDefault();

            //check extention
            var fileName = $("#file").val();
            if (fileName != "" && fileName != null) {
                var fileExtension = fileName.replace(/^.*\./, '');
                if (!uploadFileExtentions.includes(fileExtension.toUpperCase())) {
                    toastr.error("فرمت فایل ارسالی صحیح نمیباشد");
                    $("#file").addClass("error");
                    return;

                }
            }
            if ($("#content").val() == "" || $("#content").val() == null) {
                toastr.error("لطفا متن  پیام را وارد کنید");
                $("#content").addClass("error");
                return;
            }

            if ($("#subject").val() == "" || $("#subject").val() == null) {
                toastr.error("لطفا متن  پیام را وارد کنید");
                $("#subject").addClass("error");
                return;
            }
            if ($("#subject").val() == "" || $("#subject").val() == null) {
                toastr.error("لطفا موضوع  پیام را وارد کنید");
                $("#subject").addClass("error");
                return;
            }
            var formData = new FormData(this);


            $.ajax({
                beforeSend: setAuthHeader,
                method: "Post",
                url: '/api/Tickets/CreateTicket',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {

                    if (data.successCode) {
                        toastr.success(data.message);
                        $("#CreateTicketForm").modal('hide');


                        $("#CreateTicketClose").click();
                        $(".modal-backdrop").addClass("d-none");

                    } else {

                        toastr.error(data.message);
                    }
                },
                error: function (data) {

                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);

                    })
                }
            });

        });
        function showDetails(e) {

            //data - ="${item.exemptionExpirestionDate}"
            //data - ="${item.exemptionExpirestionRecieveDate}"
            //data - ="${item.military}"

            const phoneNUmber = changeValue($(e).attr("data-phoneNUmber"));
            const fullName = changeValue($(e).attr("data-fullName"));
            const email = changeValue($(e).attr("data-email"));
            const asignCount = changeValue($(e).attr("data-asignCount"));
            const address = changeValue($(e).attr("data-address"));
            const city = changeValue($(e).attr("data-city"));
            const isActive = changeValue($(e).attr("data-isActive"));
            const logo = $(e).attr("data-logo");
            const isMarried = $(e).attr("data-isMarried");

            const exemptionExpirestionDate = changeValue($(e).attr("data-exemptionExpirestionDate"));
            const exemptionExpirestionRecieveDate = changeValue($(e).attr("data-exemptionExpirestionRecieveDate"));
            const military = changeValue($(e).attr("data-military"));
            const birthday = changeValue($(e).attr("data-birthday"));

            $("#phoneNUmber").html(phoneNUmber);
            $("#fullName").html(fullName);
            $("#email").html(email);
            $("#asignCount").html(asignCount);
            $("#address").html(address);
            $("#city").html(city);
            $("#isActive").html(userActivation(isActive));
            $("#isMarried").html(isMarried);

            $("#exemptionExpirestionDate").html(exemptionExpirestionDate);
            $("#exemptionExpirestionRecieveDate").html(exemptionExpirestionRecieveDate);
            $("#military").html(military);
            $("#birthday").html(birthday);

            $("#logo").attr("src", "/Img/EmployeeAvatar/" + logo);

            $("#ShowDetails").modal("toggle");

        }


        function CreateGiftCode(id) {
            $("#EmployerId").val(id);
            $(".modal-backdrop").removeClass("d-none");
            $("#CreateGifCode").modal("toggle");

        }



        $("#CreateGifCodeBtn").click(function (e) {
            e.preventDefault();


            $.ajax({
                beforeSend: setAuthHeader,
                method: "POST",
                url: '/api/GiftCode/CreateGiftCode',
                contentType: 'application/json',
                data: JSON.stringify(serializeForm(document.querySelector('.CreateGifCodeForm'))),
                success: function (data) {
                    if (data.statusCode == '200') {
                        toastr.success(data.message);
                        $("#CreateGifCode").modal("hide");
                        $('#CreateGifCodeclose').click();
                        $(".modal-backdrop").addClass("d-none");

                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });

        })


        function rejectRequest(e) {
            const id = changeValue($(e).attr("data-id"));
            Swal.fire({
                title: 'رد کردن درخواست',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                confirmButtonText: 'تایید',
                cancelButtonText: 'لغو',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    var formData = new FormData();
                    formData.append("id", id);
                    formData.append("AdminDescription", login);
                    $.ajax({
                        beforeSend: setAuthHeader,
                        type: "POST",
                        url: rejectUrl,
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        dataType: 'json',
                        success: function (data) {
                            GetData(url, {}, true);

                        },
                        error: function () {
                            Swal.fire({
                                type: "success",
                                title: '',
                                text: 'خطایی رخ داده',
                                confirmButtonClass: 'btn btn-success',
                                confirmButtonText: 'باشه',
                            });
                        }
                    });

                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.isConfirmed) {
                    //Swal.fire({
                    //    title: `${result.value.login}'s avatar`,
                    //    imageUrl: result.value.avatar_url
                    //})

                    Swal.fire({
                        title: `ثبت موفقیت آمیز تغییرات`,
                        imageUrl: result.value.avatar_url
                    })
                }
            })


        }

        function acceptrequest(e) {
            const id = changeValue($(e).attr("data-id"));
            Swal.fire({
                title: '',
                text: "آیا مطمئن به تایید هستید؟",
                type: 'success',
                showCancelButton: true,
                confirmButtonText: 'بله',
                cancelButtonText: 'خیر',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        beforeSend: setAuthHeader,
                        type: "POST",
                        url: acceptUrl,
                        data: "id=" + id,
                        success: function (data) {
                            GetData(url, {}, true);
                            Swal.fire({
                                type: "success",
                                title: '',
                                text: ' ثبت موفقیت آمیز تغییرات',
                                confirmButtonClass: 'btn btn-success',
                                confirmButtonText: 'باشه',
                            });
                        },
                        error: function () {
                            Swal.fire({
                                type: "success",
                                title: '',
                                text: 'خطایی رخ داده',
                                confirmButtonClass: 'btn btn-success',
                                confirmButtonText: 'باشه',
                            });
                        }

                    });

                }
            });
        }



        function BlockUnblock(e) {
            console.log(e);
            var id = $(e).attr("data-id");
            var isActive = false;
            let url = "";
            if ($(e).prop('checked') == true) {
                isActive = true;


            }
            if (isActive) {
                url = "/api/Account/UnBlockUser?userId=" + id;
                block(url);

            }
            else {
                url = "/api/Account/BlockUser?userId=" + id;


                //alert



                swal({
                    title: "آیا مطمئن هستید؟",
                    text: "با بلاک کردن کابر دسترسی را کاملا از بین میبرید!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            block(url);

                        } else {
                            $(e).prop('checked', true); // Checks it

                        }
                    });

                //alert


            }





        }
        function block(url) {
            $.ajax({
                beforeSend: setAuthHeader,
                method: "POST",
                url: url,
                contentType: 'application/json',
                data: {},

                success: function (data) {
                    if (data.statusCode == '200') {
                        toastr.success(data.message);
                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }
        function goToUserAccount(userPhoneNumber) {

            $.ajax({
                beforeSend: setAuthHeader,
                method: "Get",
                url: '/GetUserInfoForForceLogin?phoneNumber=' + userPhoneNumber,
                contentType: 'application/json',
                data: {},

                success: function (data) {
                    var userName = data.phoneNumber;
                    var verificationCode = data.verificationCode;
                    location.href = 'http://katinojob.ir/Security/' + userName + '/' + verificationCode + '/Employee'

                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }

    </script>

}