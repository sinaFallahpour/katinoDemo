@model Domain.Entities.Services
@using DNTPersianUtils.Core;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    <link rel="~/stylesheet" href="vendors/dataTable/dataTables.min.css" type="text/css">
    <style>
        #createLanguageButton {
            margin-top: 3%;
            display: block;
            margin-right: 35%;
            width: 25%;
            text-align: center;
            padding: 2%;
        }

        #myTable {
            text-align: center;
        }

        i {
            font-size: 30px;
        }
    </style>
}
<h1>خدمات</h1>


@*<hr />
    <a style="color:white!important"  href="/admin/services/create" class="btn btn-primary mr-2 mb-2">
        ایجاد
    </a>
    <hr />
    <table id="myTable" class="table table-striped table-bordered col-xs-1 center-block">
        <thead>
            <tr>

                <th>#</th>
                <th>عنوان</th>
                <th>پدر</th>
                <th>تاریخ</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var counter = 1;
                <tr>
                    <td>
                        @counter
                    </td>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.ParentId
                    </td>
                    <td>
                        @item.Date.ToPersianDateTextify()
                    </td>
                </tr>
                counter++;
            }
        </tbody>
    </table>*@

<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">

            <div class="card">
                <div class="card-body">
                    <h6 class="card-title"> جدید</h6>
                    <form id="form" novalidate="">
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">عنوان</label>
                                <input asp-for="Title" type="text" class="form-control" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">پدر</label>
                                <select asp-for="ParentId" type="text" class="form-control" required>
                                    <option value="0"></option>
                                    @foreach (var item in ViewBag.Services)
                                    {
                                        <option value="@item.Id">@item.Title</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-12 mb-3">
                                <label for="validationCustom03">توضیحات</label>
                                <input type="text" class="form-control" asp-for="Description">
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">ارسال</button>
                    </form>
                </div>
            </div>

        </div>
    </div>

</div>
@section scripts{
    <script src="https://cdn.ckeditor.com/4.15.1/full-all/ckeditor.js"></script>
    <script src="~/vendors/dataTable/jquery.dataTables.min.js"></script>

    <!-- Bootstrap 4 and responsive compatibility -->
    <script src="~/vendors/dataTable/dataTables.bootstrap4.min.js"></script>
    <script src="~/vendors/dataTable/dataTables.responsive.min.js"></script>
    <script>
        var Language;

        //CKEDITOR.config.contentsLangDirection = 'rtl';

        //CKEDITOR.replace('Description');
        CKEDITOR.replace('Description', {
            language: 'fa',
            uiColor: '#d9d9d9',
            contentsLangDirection: 'rtl',
            extraAllowedContent: 'br(*)',
            filebrowserUploadUrl: '/admin/services/UploadImg',
            filebrowserImageUploadUrl: '/admin/services/UploadImg'
            //config.extraPlugins = 'uploadimage';
            //config.uploadUrl = '/uploader/upload.php';
        });

        $(document).ready(function () {

            GetData('/api/Languages/GetAllLanguagesForAdmin', {}, false);

        });
        function GetData(url, data, isAlreadyTable) {
            if (isAlreadyTable == true) {
                $('#myTable').DataTable().destroy();
            }
            var oTable = $('#myTable').DataTable({
                responsive: true,
                ordering: false,

                processing: true,
                paging: true,
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.10.20/i18n/Persian.json"
                },
                ajax: {
                    beforeSend: setAuthHeader,
                    url: url,
                    dataSrc: "",
                    type: "GET",
                    dataType: "json",
                    delay: 1000,
                    data: data,
                    cache: true

                },
                columns: [
                    {
                        data: 'id'
                    }, {
                        data: 'name'
                    }
                    ,
                    {
                        data: 'updateDate'
                    },
                    {
                        data: 'isActive',
                        render: function (data, type, item) {
                            var isChecked = item.isActive == true ? 'checked' : "";
                            var isActive = item.isActive == true ? false : true;
                            return `<label class="switch">
                                                      <input type="checkbox" data-id=${item.id} onclick="ChangeActiveStatus(this)" ${isChecked}>
                                                      <span class="slider round"></span>
                                                    </label>`;
                        }
                    }
                    ,
                    {

                        data: "id",
                        render: function (data, type, item) {


                            return `<i class="fa fa-pencil-square-o text-warning" style="cursor: pointer;font-size: 30px;" aria-hidden="true" data-id=${data} onclick="editLanguage(this)"></i>`;
                        }
                    }
                ],
            });
        };

        $('#form').submit(function (e) {
            e.preventDefault();
            var formData = new FormData();
            var desc = CKEDITOR.instances['Description'].getData();
            formData.append("description", desc);
            formData.append("title", $('#Title').val());
            formData.append("ParentId", $('#ParentId').val());
            $.ajax({
                beforeSend: setAuthHeader,
                method: "POST",
                url: '/admin/Services/Create',
                //data: form.serialize(),
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.statusCode == '200') {
                        toastr.success(data.message);
                        document.getElementById('form').reset();
                        location.href = '/Admin/services';
                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        });
        function ChangeActiveStatus(e) {
            var id = $(e).attr("data-id");
            var isActive = false;
            if ($(e).prop('checked') == true) {
                isActive = true;
            }
            if (isActive) {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/EnableLanguage?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            else {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/DisableLanguage?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }

        }

    </script>
}
