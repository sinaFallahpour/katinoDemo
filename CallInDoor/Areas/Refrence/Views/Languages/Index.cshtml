




@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    <link rel="~/stylesheet" href="vendors/dataTable/dataTables.min.css" type="text/css">
    <style>
        #createLanguageButton {
            margin-top: 3%;
            display: block;
            margin-right: 35%;
            width: 25%;
            text-align: center;
            padding: 2%;
        }

        #myTable {
            text-align: center;
        }

        i {
            font-size: 30px;
        }
    </style>
}
<h1>مدیریت زبان ها</h1>


<hr />
<button type="button" id="createLanguageButton" class="btn btn-primary mr-2 mb-2" data-toggle="modal" data-target="#createModal">
    ایجاد
</button>
<hr />
<table id="myTable" class="table table-striped table-bordered col-xs-1 center-block">
    <thead>
        <tr>

            <th>#</th>
            <th>عنوان زبان</th>
            <th>تاریخ تغییر</th>
            <th>نمایش در سایت</th>
            <th>ویرایش</th>

        </tr>
    </thead>
    <tbody id="rewsOfTable">
    </tbody>
</table>
<div class="modal fade" tabindex="-1" role="dialog" id="createModal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ایجاد زبان  جدید</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="closemodals" data-dismiss="modal">×</span>
                </button>
            </div>
            <div class="modal-body">

                <form id="createLanguageForm">
                    <input type="hidden" value="" name="id" id="id" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="Name">عنوان </label>
                            <input type="text" name="Name" class="form-control" id="Name" placeholder="عنوان  ">
                        </div>
                    </div>


                    <button type="submit" id="createLanguage" class="btn btn-block btn-primary m-auto btn-block">ثبت</button>


                </form>


            </div>

        </div>
    </div>
</div>

@section scripts{
    <script src="~/vendors/dataTable/jquery.dataTables.min.js"></script>

    <!-- Bootstrap 4 and responsive compatibility -->
    <script src="~/vendors/dataTable/dataTables.bootstrap4.min.js"></script>
    <script src="~/vendors/dataTable/dataTables.responsive.min.js"></script>
    <script>
        var Language;
        var isEdit = false;
        $(document).ready(function () {

            GetData('/api/Languages/GetAllLanguagesForAdmin', {}, false);

        });
        function GetData(url, data, isAlreadyTable) {
            if (isAlreadyTable == true) {
                $('#myTable').DataTable().destroy();
            }
            var oTable = $('#myTable').DataTable({
                ordering: false,

                processing: true,
                paging: true,
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.10.20/i18n/Persian.json"
                },
                ajax: {
                    beforeSend: setAuthHeader,
                    url: url,
                    dataSrc: "",
                    type: "GET",
                    dataType: "json",
                    delay: 1000,
                    data: data,
                    cache: true

                },
                columns: [
                    {
                        data: 'id'
                    }, {
                        data: 'name'
                    }
                    ,
                    {
                        data: 'updateDate'
                    },
                    {
                        data: 'isActive',
                        render: function (data, type, item) {
                            var isChecked = item.isActive == true ? 'checked' : "";
                            var isActive = item.isActive == true ? false : true;
                            return `<label class="switch">
                                          <input type="checkbox" data-id=${item.id} onclick="ChangeActiveStatus(this)" ${isChecked}>
                                          <span class="slider round"></span>
                                        </label>`;
                        }
                    }
                    ,
                    {

                        data: "id",
                        render: function (data, type, item) {


                            return `<i class="fa fa-pencil-square-o text-warning" style="cursor: pointer;font-size: 30px;" aria-hidden="true" data-id=${data} onclick="editLanguage(this)"></i>`;
                        }
                    }
                ],
            });
        };

        $('#createLanguageForm').submit(function (e) {
            e.preventDefault();
            if (isEdit) {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/EditLanguage',
                    contentType: 'application/json',
                    data: JSON.stringify(serializeForm(document.querySelector('#createLanguageForm'))),
                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                            $("#createModal").modal("hide");
                            $('#closemodals').click();
                            $(".modal-backdrop").removeClass("show");
                            GetData('/api/Languages/GetAllLanguagesForAdmin', {}, true);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            else {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/AddLanguage',
                    contentType: 'application/json',
                    data: JSON.stringify(serializeForm(document.querySelector('#createLanguageForm'))),

                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                            $("#createModal").modal("hide");
                            $('#closemodals').click();
                            $(".modal-backdrop").removeClass("show");
                            GetData('/api/Languages/GetAllLanguagesForAdmin', {}, true);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            isEdit = false;
        });
        function editLanguage(e) {
            var id = $(e).attr("data-id");
            $.ajax({
                beforeSend: setAuthHeader,
                method: "Get",
                url: '/api/Languages/GetLanguage?id=' + id,
                contentType: 'application/json',
                data: {},

                //cache: false,
                //contentType: false,
                //processData: false,
                success: function (data) {

                    Language = { id: data.resul.id, name: data.resul.name };
                    $("#Name").val(Language.name);
                    $("#id").val(Language.id);
                    $("#createLanguageButton").click();
                    isEdit = true;
                },
                error: function (data) {
                    console.log(data)
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }
        function ChangeActiveStatus(e) {
            var id = $(e).attr("data-id");
            var isActive = false;
            if ($(e).prop('checked') == true) {
                isActive = true;
            }
            if (isActive) {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/EnableLanguage?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            else {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Languages/DisableLanguage?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }

        }

    </script>
}
