




@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    <link rel="~/stylesheet" href="vendors/dataTable/dataTables.min.css" type="text/css">
    <style>
        #createSettingButton {
            margin-top: 3%;
            display: block;
            margin-right: 35%;
            width: 25%;
            text-align: center;
            padding: 2%;
        }

        #SiteSettingBtn {
            margin-top: 3%;
            display: block;
            margin-right: 35%;
            width: 25%;
            text-align: center;
            padding: 2%;
        }

        #myTable {
            text-align: center;
        }

        i {
            font-size: 30px;
        }
    </style>
}
<h1>تنظیمات</h1>
<button type="button" id="SiteSettingBtn" class="btn btn-primary mr-2 mb-2" data-toggle="modal" @*data-target="#SiteSetting"*@>
    تنظیمات اصلی سایت
</button>
<hr />
<button type="button" id="createSettingButton" class="btn btn-primary mr-2 mb-2" data-toggle="modal" data-target="#createModal">
    ایجاد
</button>
<hr />
<table id="myTable" class="table table-striped table-bordered col-xs-1 center-block">
    <thead>
        <tr>

            <th>#</th>
            <th>عنوان </th>
            <th>کلید</th>
            <th>مقدار</th>
            <th>ویرایش</th>

        </tr>
    </thead>
    <tbody id="rewsOfTable">
    </tbody>
</table>
<div class="modal fade" tabindex="-1" role="dialog" id="createModal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ایجاد زبان  جدید</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="closemodals" data-dismiss="modal">×</span>
                </button>
            </div>
            <div class="modal-body">

                <form id="CreateSettingForm">
                    <input type="hidden" value="" name="id" id="id" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="title">عنوان </label>
                            <input type="text" name="title" class="form-control" id="title" placeholder="عنوان .... ">
                        </div>
                        <div class="form-group col-md-12">
                            <label for="key">کلید </label>
                            <input type="text" name="key" class="form-control" id="key" placeholder="کلید ..... ">
                        </div>
                        <div class="form-group col-md-12">
                            <label for="value">مقدار </label>
                            <input type="text" name="value" class="form-control" id="value" placeholder="مقدار.....  ">
                        </div>
                    </div>


                    <button type="submit" id="createSetting" class="btn btn-block btn-primary m-auto btn-block">ثبت</button>


                </form>


            </div>

        </div>
    </div>
</div>


<!--site setting modal-->
<div class="modal fade" tabindex="-1" role="dialog" id="SiteSetting">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> تنظیمات کلی سایت</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" id="closemodalsForSiteSetting" data-dismiss="modal">×</span>
                </button>
            </div>
            <div class="modal-body">

                <form id="CreateSiteSettingForm">
                    <input type="hidden" value="" name="id" id="id" />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="Linkedin">لینکدین </label>
                            <input type="text" name="Linkedin" class="form-control" id="Linkedin">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="Twitter">توییتر </label>
                            <input type="text" name="Twitter" class="form-control" id="Twitter" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="Instagram">اینستاگرام </label>
                            <input type="text" name="Instagram" class="form-control" id="Instagram" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="Telegram">واتساپ </label>
                            <input type="text" name="whatsApp" class="form-control" id="whatsApp" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="Landin_Resome_Title">رزومه عنوان </label>
                            <input type="text" name="Landin_Resome_Title" class="form-control" id="Landin_Resome_Title" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="Landin_Resome_Content">رزومه متن </label>
                            <input type="text" name="Landin_Resome_Content" class="form-control" id="Landin_Resome_Content" />
                        </div>

                        <div class="form-group col-md-6">
                            <label for="Logo"> لوگوی سایت </label>
                            <input type="file" name="Logo" class="form-control" id="Logo" />
                            <img id="imgForLogo" style="max-width:100%;max-height:180px" />
                        </div>

                        <div class="form-group col-md-6">
                            <label for="Landing_Img">تصویر اصلی سایت(400*1370) </label>
                            <input type="file" name="Landing_Img" class="form-control" id="Landing_Img" />
                            <img id="imgForLanding_Img" style="max-width:100%;max-height:180px" />

                        </div>
                        <div class="form-group col-md-12">
                            <label for="content1">در باره ما </label>
                            <textarea type="text" name="aboutUs" class="form-control" id="aboutUs"></textarea>
                        </div>

                        <div class="form-group col-md-12">
                            <label for="content1">قوانین </label>
                            <textarea type="text" name="policy" class="form-control" id="policy"></textarea>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="content1">راهنمای استفاده برای کارجویان </label>
                            <textarea type="text" name="employeeHelper" class="form-control" id="employeeHelper"></textarea>
                        </div>

                    </div>


                    <button type="submit" id="createSiteSetting" class="btn btn-block btn-primary m-auto btn-block">ثبت</button>


                </form>


            </div>

        </div>
    </div>
</div>

@section scripts{
    <script src="~/vendors/dataTable/jquery.dataTables.min.js"></script>

    <!-- Bootstrap 4 and responsive compatibility -->
    <script src="~/vendors/dataTable/dataTables.bootstrap4.min.js"></script>
    <script src="~/vendors/dataTable/dataTables.responsive.min.js"></script>
    <script src="https://cdn.ckeditor.com/4.15.1/standard/ckeditor.js"></script>
    <script>
        var Setting;
        var isEdit = false;

        CKEDITOR.config.contentsLangDirection = 'rtl';

        CKEDITOR.replace('employeeHelper');
        CKEDITOR.replace('policy');
        CKEDITOR.replace('aboutUs');
        $(document).ready(function () {

            GetData('/api/Setting/GetAllSetting', {}, false);

        });
        function GetData(url, data, isAlreadyTable) {
            if (isAlreadyTable == true) {
                $('#myTable').DataTable().destroy();
            }
            var oTable = $('#myTable').DataTable({
                ordering: false,

                processing: true,
                paging: true,
                Setting: {
                    url: "//cdn.datatables.net/plug-ins/1.10.20/i18n/Persian.json"
                },
                ajax: {
                    beforeSend: setAuthHeader,
                    url: url,
                    dataSrc: "",
                    type: "GET",
                    dataType: "json",
                    delay: 1000,
                    data: data,
                    cache: true

                },
                columns: [
                    {
                        data: 'id'
                    }
                    ,
                    {
                        data: 'title'
                    }, {
                        data: 'key'
                    },

                    {
                        data: 'value'
                    }
                    ,
                    {

                        data: "id",
                        render: function (data, type, item) {


                            return `<i class="fa fa-pencil-square-o text-warning" style="cursor: pointer;font-size: 30px;" aria-hidden="true" data-id=${data} onclick="editSetting(this)"></i>
                                                                                <i class="fa fa fa-trash text-danger" style="cursor: pointer;font-size: 30px;" aria-hidden="true" data-id=${data} onclick="deleteSetting(this)"></i>`;
                        }
                    }
                ],
            });
        };

        $('#CreateSettingForm').submit(function (e) {
            e.preventDefault();
            if (isEdit) {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Setting/EditSetting',
                    contentType: 'application/json',
                    data: JSON.stringify(serializeForm(document.querySelector('#CreateSettingForm'))),
                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                            $("#createModal").modal("hide");
                            $('#closemodals').click();
                            $(".modal-backdrop").removeClass("show");
                            GetData('/api/Setting/GetAllSetting', {}, true);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            else {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Setting/CreateSetting',
                    contentType: 'application/json',
                    data: JSON.stringify(serializeForm(document.querySelector('#CreateSettingForm'))),

                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                            $("#createModal").modal("hide");
                            $('#closemodals').click();
                            $(".modal-backdrop").removeClass("show");
                            GetData('/api/Setting/GetAllSetting', {}, true);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            isEdit = false;
        });
        function editSetting(e) {
            var id = $(e).attr("data-id");
            $.ajax({
                beforeSend: setAuthHeader,
                method: "Get",
                url: '/api/Setting/GetSettingById?id=' + id,
                contentType: 'application/json',
                data: {},

                //cache: false,
                //contentType: false,
                //processData: false,
                success: function (data) {

                    Setting = {
                        id: data.resul.id, title: data.resul.title, key: data.resul.key
                        , value: data.resul.value
                    };
                    $("#key").val(Setting.key);
                    $("#value").val(Setting.value);
                    $("#title").val(Setting.title);
                    $("#id").val(Setting.id);
                    $("#createSettingButton").click();
                    isEdit = true;
                },
                error: function (data) {
                    console.log(data)
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }
        function ChangeActiveStatus(e) {
            var id = $(e).attr("data-id");
            var isActive = false;
            if ($(e).prop('checked') == true) {
                isActive = true;
            }
            if (isActive) {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Settings/EnableSetting?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }
            else {
                $.ajax({
                    beforeSend: setAuthHeader,
                    method: "POST",
                    url: '/api/Settings/DisableSetting?id=' + id,
                    contentType: 'application/json',
                    data: {},

                    success: function (data) {
                        if (data.statusCode == '200') {
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (data) {
                        if (data.responseJSON == undefined) {
                            toastr.error("مشکلی رخ داده است");
                            return;

                        }
                        var errors = data.responseJSON.message;
                        errors.forEach(elem => {
                            if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                            if (elem == "Forbidden") { elem = "عدم دسترسی " }
                            toastr.error(elem);


                        })
                    }
                });
            }

        }

        function deleteSetting(e) {
            var id = $(e).attr("data-id");

            $.ajax({
                beforeSend: setAuthHeader,
                method: "Post",
                url: '/api/Setting/DeleteSetting?id=' + id,
                contentType: 'application/json',
                data: {},

                //cache: false,
                //contentType: false,
                //processData: false,
                success: function (data) {
                    if (data.successCode) {
                        toastr.success(data.message);
                        GetData('/api/Setting/GetAllSetting', {}, true);

                    }
                    else {
                        toastr.error(data.message);
                    }

                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }
        $("#SiteSettingBtn").click(async function () {
            $("#SiteSetting").modal("hide");
            getSiteSettinInfo().then((data) => {
                data.forEach(function (item, index) {
                    if (item.key === 'EmployeeHelper') {
                        CKEDITOR.instances['employeeHelper'].setData(item.value);

                    }
                    else if (item.key === 'Policy') {
                        CKEDITOR.instances['policy'].setData(item.value);

                    }
                    else if (item.key === 'AboutUs') {
                        CKEDITOR.instances['aboutUs'].setData(item.value);

                    }
                    else if (item.key === 'Logo') {
                        $("#imgForLogo").attr("src", "/Img/Setting/" + item.value);
                    }

                    else if (item.key === 'Landing_Img') {
                        $("#imgForLanding_Img").attr("src", "/Img/Setting/" + item.value);
                    } else {
                        if ($(`#${item.key}`)) $(`#${item.key}`).val(item.value);
                        if ($(`#${item.key}`)) $(`#${item.key}`).html(item.value);
                    }

                });





                $("#SiteSetting").modal("toggle");

            },
                (error) => { console.log(error) });

        });
        function getSiteSettinInfo() {
            return $.ajax({
                beforeSend: setAuthHeader,
                method: "Get",
                url: '/api/Setting/GetAllInfoForIndex',
                contentType: 'application/json',
                data: {},

                //cache: false,
                //contentType: false,
                //processData: false,
                success: function (data) {


                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        }

        $('#CreateSiteSettingForm').submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            //formData.delete(employeeHelper);
            //formData.delete(policy);
            //formData.delete(aboutUs);
            var employeeHelper = CKEDITOR.instances['employeeHelper'].getData();
            formData.set("employeeHelper", employeeHelper);

            var policy = CKEDITOR.instances['policy'].getData();
            formData.set("policy", policy);

            var aboutUs = CKEDITOR.instances['aboutUs'].getData();
            formData.set("aboutUs", aboutUs);

            $.ajax({
                beforeSend: setAuthHeader,
                method: "POST",
                url: '/api/Setting/ChnageIndexSetting',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    console.log(data)
                    if (data.statusCode == '200') {
                        toastr.success(data.message);
                        $("#SiteSetting").modal("hide");
                        $('#closemodalsForSiteSetting').click();
                        $(".modal-backdrop").removeClass("show");
                        GetData('/api/Setting/GetAllSetting', {}, true);
                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function (data) {
                    if (data.responseJSON == undefined) {
                        toastr.error("مشکلی رخ داده است");
                        return;

                    }
                    var errors = data.responseJSON.message;
                    errors.forEach(elem => {
                        if (elem == "Unauthorized") { elem = "کابر نامعتبر لطفا لاگین کنید" }
                        if (elem == "Forbidden") { elem = "عدم دسترسی " }
                        toastr.error(elem);


                    })
                }
            });
        });
    </script>
}
